import 'dotenv/config';
import { Telegraf } from 'telegraf';
import { Markup } from 'telegraf';
import { message } from 'telegraf/filters';
import { BTNS } from './help';
import { msgHandler } from './msgHandler';

const bot = new Telegraf(process.env.TG_KEY, { handlerTimeout: 20000 });

bot.start((ctx) => {
  ctx.replyWithPhoto(
    { source: 'public/darkLogoSmall.jpg' },
    {
      caption:
        '–ö–æ–º–ø–∞–Ω–∏—è –°–æ–ª–æ–¥ –•–º–µ–ª—å —ç—Ç–æ –Ω–∞–¥—ë–∂–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –ø–∏–≤–æ–≤–∞—Ä–µ–Ω–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏, —Å–Ω–µ–∫–æ–≤ –∏ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å 2011 –≥–æ–¥–∞.',
      ...Markup.keyboard([
        [BTNS.About, BTNS.Catalog, BTNS.BusinessHelp],
        [BTNS.Logistics, BTNS.Application, BTNS.Feedback],
      ]).resize(),
    }
  );
  // –≠—Ç–æ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–Ω—É—Ç—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–≤–æ–¥–∏—Ç—å
  // ctx.reply('message, {reply_markup: { inline_keyboard: [[{ text: '–û –∫–æ–º–ø–∞–Ω–∏–∏', callback_data: 'AHAHHAh' }]] }}')
});

bot.action('cancel', (ctx) => ctx.editMessageText('–ú–æ–∂–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑...'));

bot.on(message('text'), async (ctx) => {
  const input = ctx.message.text.trim();
  if (!input) return;
  msgHandler(input, ctx);
});

bot.on('voice', (ctx) => ctx.reply('–ö–∞–∫–æ–π —á—É–¥–Ω—ã–π —É –≤–∞—Å –≥–æ–ª–æ—Å üòâ'));
bot.on('sticker', (ctx) => ctx.reply('–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä üôÉ'));
bot.on('photo', (ctx) => ctx.reply('üëç'));

bot.catch((err, ctx) => {
  console.error(err);
  ctx.reply('–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
});

bot.launch();
console.log('–ó–∞–ø—É—Å—Ç–∏–ª—Å—è');
